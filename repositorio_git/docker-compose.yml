services:
  web:
    platform: linux/amd64
    build: .
    command: ["gunicorn", "project.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "2", "--threads", "2", "--timeout", "120"]
    env_file:
      - ./.env
    volumes:
      - ./configs:/app/configs:rw
      - ${HOST_BACKUP_DIR}:${OFFLINE_BACKUP_DIR}:rw
      - ./data:/app/data:rw
      - staticfiles_volume:/app/staticfiles
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - hospital-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "8000:80"
    volumes:
      - staticfiles_volume:/app/staticfiles:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
    networks:
      - hospital-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  celery:
    platform: linux/amd64
    build: .
    command: ["celery", "-A", "project.celery:app", "worker", "--loglevel=info", "--concurrency=2", "--max-tasks-per-child=50"]
    env_file:
      - ./.env
    volumes:
      - ./configs:/app/configs:rw
      - ${HOST_BACKUP_DIR}:${OFFLINE_BACKUP_DIR}:rw
      - ./data:/app/data:rw
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
      - CELERY_WORKER_PREFETCH_MULTIPLIER=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - hospital-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery-beat:
    platform: linux/amd64
    build: .
    command: ["celery", "-A", "project.celery:app", "beat", "--loglevel=info"]
    env_file:
      - ./.env
    volumes:
      - ./configs:/app/configs:rw
      - ${HOST_BACKUP_DIR}:${OFFLINE_BACKUP_DIR}:rw
      - ./data:/app/data:rw
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - hospital-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - hospital-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  rabbitmq_data:
    driver: local
  staticfiles_volume:
    driver: local

networks:
  hospital-network:
    driver: bridge